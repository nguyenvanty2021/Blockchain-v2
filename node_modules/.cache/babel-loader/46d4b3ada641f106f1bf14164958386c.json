{"ast":null,"code":"import _objectSpread from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js\";\n\nimport React from \"react\";\nimport Web3 from \"web3\";\nimport Tether from \"./../truffle_abis/Tether.json\";\nimport RWD from \"./../truffle_abis/RWD.json\";\nimport DecentralBank from \"./../truffle_abis/DecentralBank.json\";\n\nvar App = function App() {\n  var _React$useState = React.useState({\n    tether: {},\n    rwd: {},\n    decentralBank: {},\n    tetherBalance: \"0\",\n    rwdBalance: \"0\",\n    stakingBalance: \"0\",\n    accountList: \"0x0\",\n    loading: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      objectInformation = _React$useState2[0],\n      setObjectInformation = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    time: {},\n    seconds: 20\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      objectTime = _React$useState4[0],\n      setObjectTime = _React$useState4[1];\n\n  var timer = 0;\n\n  var handleSecondsToTime = function handleSecondsToTime(secs) {\n    var hours, seconds, minutes;\n    hours = Math.floor(secs / (60 * 60));\n    var devisor_for_minutes = secs % (60 * 60);\n    minutes = Math.floor(devisor_for_minutes / 60);\n    var devisor_for_seconds = devisor_for_minutes % 60;\n    seconds = Math.ceil(devisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds\n    };\n    return obj;\n  };\n\n  var handleCheckWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 8;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 6;\n              return loadTetherContract();\n\n            case 6:\n              _context.next = 9;\n              break;\n\n            case 8:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n              }\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCheckWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadTetherContract = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, accountList, networkID, tetherData, rwdData, decentralBankData, tether, rwd, decentralBank, tetherBalance, rwdBalance, stakingBalance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accountList = _context2.sent;\n              _context2.next = 6;\n              return web3.eth.net.getId();\n\n            case 6:\n              networkID = _context2.sent;\n              tetherData = Tether.networks[networkID];\n              rwdData = RWD.networks[networkID];\n              decentralBankData = DecentralBank.networks[networkID]; // metamask ở GANACHE thì mới lấy được networkID\n\n              if (!(tetherData && rwdData && decentralBankData)) {\n                _context2.next = 26;\n                break;\n              }\n\n              tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n              rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n              decentralBank = new web3.eth.Contract(DecentralBank.abi, decentralBankData.address);\n              _context2.next = 16;\n              return tether.methods.balanceOf(accountList[0]).call();\n\n            case 16:\n              tetherBalance = _context2.sent;\n              _context2.next = 19;\n              return rwd.methods.balanceOf(accountList[0]).call();\n\n            case 19:\n              rwdBalance = _context2.sent;\n              _context2.next = 22;\n              return decentralBank.methods.stakingBalance(accountList[0]).call();\n\n            case 22:\n              stakingBalance = _context2.sent;\n              setObjectInformation(_objectSpread({}, objectInformation, {\n                tether: tether,\n                rwd: rwd,\n                decentralBank: decentralBank,\n                stakingBalance: web3.utils.fromWei(stakingBalance.toString(), \"Ether\"),\n                rwdBalance: web3.utils.fromWei(rwdBalance.toString(), \"Ether\"),\n                tetherBalance: web3.utils.fromWei(tetherBalance.toString(), \"Ether\"),\n                accountList: accountList,\n                loading: false\n              }));\n              _context2.next = 27;\n              break;\n\n            case 26:\n              window.alert(\"Error! Tether contract not deployed - no detected network!\");\n\n            case 27:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadTetherContract() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUnstakingFunction = function handleUnstakingFunction() {\n    var decentralBankData = objectInformation.decentralBankData,\n        from = objectInformation.accountList;\n    setObjectInformation(_objectSpread({}, objectInformation, {\n      loading: true\n    }));\n    decentralBankData.methods.unstakeTokens().send({\n      from: from\n    }).on(\"transactionHash\", function (hash) {\n      setObjectInformation(_objectSpread({}, objectInformation, {\n        loading: false\n      }));\n    });\n  };\n\n  var handleStakeTokens = function handleStakeTokens(amount) {\n    var decentralBankData = objectInformation.decentralBankData,\n        from = objectInformation.accountList,\n        tether = objectInformation.tether;\n    setObjectInformation(_objectSpread({}, objectInformation, {\n      loading: true\n    }));\n    tether.methods.approve(decentralBankData._address, amount).send({\n      from: from\n    }).on(\"transactionHash\", function (hash) {\n      decentralBankData.methods.depositTokens(amount).send({\n        from: from\n      }).on(\"transactionHash\", function (hash) {\n        setObjectInformation(_objectSpread({}, objectInformation, {\n          loading: false\n        }));\n      });\n    });\n  };\n\n  var handleTime = function handleTime() {\n    var time = handleSecondsToTime(objectTime.seconds);\n    setObjectTime(_objectSpread({}, objectTime, {\n      time: time\n    }));\n  };\n\n  var handleCountDown = function handleCountDown() {\n    // 1. countdown one second at a time\n    var seconds = objectTime.seconds - 1;\n    setObjectTime(_objectSpread({}, objectTime, {\n      time: handleSecondsToTime(seconds),\n      seconds: seconds\n    })); // 2. stop counting when we hit zero\n\n    if (seconds === 0) {\n      clearInterval(timer);\n    }\n  };\n\n  React.useEffect(function () {\n    handleCheckWeb3();\n    handleTime();\n  }, []);\n  console.log(objectInformation);\n  return objectInformation.loading ? /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, \"Address \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, objectInformation.accountList)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, \"Staking Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 26\n    }\n  }, objectInformation.stakingBalance)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, \"RWD Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }\n  }, objectInformation.rwdBalance)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"Balance: \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 18\n    }\n  }, objectInformation.tetherBalance)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleUnstakingFunction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, \"WithDraw\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"\".concat(objectTime.time.m, \":\").concat(objectTime.time.s)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js"],"names":["React","Web3","Tether","RWD","DecentralBank","App","useState","tether","rwd","decentralBank","tetherBalance","rwdBalance","stakingBalance","accountList","loading","objectInformation","setObjectInformation","time","seconds","objectTime","setObjectTime","timer","handleSecondsToTime","secs","hours","minutes","Math","floor","devisor_for_minutes","devisor_for_seconds","ceil","obj","h","m","s","handleCheckWeb3","window","ethereum","web3","enable","loadTetherContract","currentProvider","alert","eth","getAccounts","net","getId","networkID","tetherData","networks","rwdData","decentralBankData","Contract","abi","address","methods","balanceOf","call","utils","fromWei","toString","handleUnstakingFunction","from","unstakeTokens","send","on","hash","handleStakeTokens","amount","approve","_address","depositTokens","handleTime","handleCountDown","clearInterval","useEffect","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\";\nimport Tether from \"./../truffle_abis/Tether.json\";\nimport RWD from \"./../truffle_abis/RWD.json\";\nimport DecentralBank from \"./../truffle_abis/DecentralBank.json\";\nconst App = () => {\n  const [objectInformation, setObjectInformation] = React.useState({\n    tether: {},\n    rwd: {},\n    decentralBank: {},\n    tetherBalance: \"0\",\n    rwdBalance: \"0\",\n    stakingBalance: \"0\",\n    accountList: \"0x0\",\n    loading: true,\n  });\n  const [objectTime, setObjectTime] = React.useState({\n    time: {},\n    seconds: 20,\n  });\n  let timer = 0;\n  const handleSecondsToTime = (secs) => {\n    let hours, seconds, minutes;\n    hours = Math.floor(secs / (60 * 60));\n    let devisor_for_minutes = secs % (60 * 60);\n    minutes = Math.floor(devisor_for_minutes / 60);\n    let devisor_for_seconds = devisor_for_minutes % 60;\n    seconds = Math.ceil(devisor_for_seconds);\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n    };\n    return obj;\n  };\n  const handleCheckWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      await loadTetherContract();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n    }\n  };\n  const loadTetherContract = async () => {\n    const web3 = window.web3;\n    const accountList = await web3.eth.getAccounts();\n    const networkID = await web3.eth.net.getId();\n    const tetherData = Tether.networks[networkID];\n    const rwdData = RWD.networks[networkID];\n    const decentralBankData = DecentralBank.networks[networkID];\n    // metamask ở GANACHE thì mới lấy được networkID\n    if (tetherData && rwdData && decentralBankData) {\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      const rwd = new web3.eth.Contract(RWD.abi, rwdData.address);\n      const decentralBank = new web3.eth.Contract(\n        DecentralBank.abi,\n        decentralBankData.address\n      );\n      let tetherBalance = await tether.methods.balanceOf(accountList[0]).call();\n      let rwdBalance = await rwd.methods.balanceOf(accountList[0]).call();\n      let stakingBalance = await decentralBank.methods\n        .stakingBalance(accountList[0])\n        .call();\n      setObjectInformation({\n        ...objectInformation,\n        tether,\n        rwd,\n        decentralBank,\n        stakingBalance: web3.utils.fromWei(stakingBalance.toString(), \"Ether\"),\n        rwdBalance: web3.utils.fromWei(rwdBalance.toString(), \"Ether\"),\n        tetherBalance: web3.utils.fromWei(tetherBalance.toString(), \"Ether\"),\n        accountList,\n        loading: false,\n      });\n    } else {\n      window.alert(\n        \"Error! Tether contract not deployed - no detected network!\"\n      );\n    }\n  };\n  const handleUnstakingFunction = () => {\n    const { decentralBankData, accountList: from } = objectInformation;\n    setObjectInformation({\n      ...objectInformation,\n      loading: true,\n    });\n    decentralBankData.methods\n      .unstakeTokens()\n      .send({\n        from,\n      })\n      .on(\"transactionHash\", (hash) => {\n        setObjectInformation({\n          ...objectInformation,\n          loading: false,\n        });\n      });\n  };\n  const handleStakeTokens = (amount) => {\n    const { decentralBankData, accountList: from, tether } = objectInformation;\n    setObjectInformation({\n      ...objectInformation,\n      loading: true,\n    });\n    tether.methods\n      .approve(decentralBankData._address, amount)\n      .send({\n        from,\n      })\n      .on(\"transactionHash\", (hash) => {\n        decentralBankData.methods\n          .depositTokens(amount)\n          .send({\n            from,\n          })\n          .on(\"transactionHash\", (hash) => {\n            setObjectInformation({\n              ...objectInformation,\n              loading: false,\n            });\n          });\n      });\n  };\n  const handleTime = () => {\n    let time = handleSecondsToTime(objectTime.seconds);\n    setObjectTime({ ...objectTime, time });\n  };\n  const handleCountDown = () => {\n    // 1. countdown one second at a time\n    let seconds = objectTime.seconds - 1;\n    setObjectTime({\n      ...objectTime,\n      time: handleSecondsToTime(seconds),\n      seconds,\n    });\n    // 2. stop counting when we hit zero\n    if (seconds === 0) {\n      clearInterval(timer);\n    }\n  };\n  React.useEffect(() => {\n    handleCheckWeb3();\n    handleTime();\n  }, []);\n  console.log(objectInformation);\n  return objectInformation.loading ? (\n    <h1>Loading...</h1>\n  ) : (\n    <>\n      <p>\n        Address <strong>{objectInformation.accountList}</strong>\n      </p>\n      <p>\n        Staking Balance: <strong>{objectInformation.stakingBalance}</strong>\n      </p>\n      <p>\n        RWD Balance: <strong>{objectInformation.rwdBalance}</strong>\n      </p>\n      <p>\n        Balance: <strong>{objectInformation.tetherBalance}</strong>\n      </p>\n      <button onClick={handleUnstakingFunction}>WithDraw</button>\n      <p>{`${objectTime.time.m}:${objectTime.time.s}`}</p>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}