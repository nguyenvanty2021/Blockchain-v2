{"ast":null,"code":"import _objectSpread from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js\";\n\nimport React from \"react\";\nimport Web3 from \"web3\";\nimport Tether from \"./../truffle_abis/Tether.json\";\n\nvar App = function App() {\n  var _React$useState = React.useState({\n    tether: {},\n    rwd: {},\n    decentralBank: {},\n    tetherBalance: \"0\",\n    rwdBalance: \"0\",\n    stakingBalance: \"0\",\n    loading: true,\n    accountList: \"0x0\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      objectInformation = _React$useState2[0],\n      setObjectInformation = _React$useState2[1];\n\n  var handleCheckWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCheckWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadTetherContract = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, accountList, networkID, tetherData, tether, tetherBalance;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.getAccounts();\n\n            case 3:\n              accountList = _context2.sent;\n              _context2.next = 6;\n              return web3.eth.net.getId();\n\n            case 6:\n              networkID = _context2.sent;\n              tetherData = Tether.networks[networkID]; // metamask ở GANACHE thì mới lấy được networkID\n\n              if (!tetherData) {\n                _context2.next = 17;\n                break;\n              }\n\n              tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n              _context2.next = 12;\n              return tether.methods.balanceOf(accountList[0]).call();\n\n            case 12:\n              tetherBalance = _context2.sent;\n              console.log(tetherBalance);\n              setObjectInformation(_objectSpread({}, objectInformation, {\n                tether: tether,\n                tetherBalance: tetherBalance.toString(),\n                accountList: accountList\n              }));\n              _context2.next = 18;\n              break;\n\n            case 17:\n              window.alert(\"Error! Tether contract not deployed - no detected network!\");\n\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadTetherContract() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleLoad = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return handleCheckWeb3();\n\n            case 2:\n              _context3.next = 4;\n              return loadTetherContract();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleLoad() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    handleLoad();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Address \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, objectInformation.accountList)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js"],"names":["React","Web3","Tether","App","useState","tether","rwd","decentralBank","tetherBalance","rwdBalance","stakingBalance","loading","accountList","objectInformation","setObjectInformation","handleCheckWeb3","window","ethereum","web3","enable","currentProvider","alert","loadTetherContract","eth","getAccounts","net","getId","networkID","tetherData","networks","Contract","abi","address","methods","balanceOf","call","console","log","toString","handleLoad","useEffect"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\";\nimport Tether from \"./../truffle_abis/Tether.json\";\nconst App = () => {\n  const [objectInformation, setObjectInformation] = React.useState({\n    tether: {},\n    rwd: {},\n    decentralBank: {},\n    tetherBalance: \"0\",\n    rwdBalance: \"0\",\n    stakingBalance: \"0\",\n    loading: true,\n    accountList: \"0x0\",\n  });\n  const handleCheckWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n    }\n  };\n  const loadTetherContract = async () => {\n    const web3 = window.web3;\n    const accountList = await web3.eth.getAccounts();\n    const networkID = await web3.eth.net.getId();\n    const tetherData = Tether.networks[networkID];\n    // metamask ở GANACHE thì mới lấy được networkID\n    if (tetherData) {\n      const tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n      let tetherBalance = await tether.methods.balanceOf(accountList[0]).call();\n      console.log(tetherBalance);\n      setObjectInformation({\n        ...objectInformation,\n        tether,\n        tetherBalance: tetherBalance.toString(),\n        accountList,\n      });\n    } else {\n      window.alert(\n        \"Error! Tether contract not deployed - no detected network!\"\n      );\n    }\n  };\n  const handleLoad = async () => {\n    await handleCheckWeb3();\n    await loadTetherContract();\n  };\n  React.useEffect(() => {\n    handleLoad();\n  }, []);\n  return (\n    <>\n      <p>\n        Address <strong>{objectInformation.accountList}</strong>\n      </p>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}