{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/tynguyen/Desktop/defi-staking-app-starter/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js\";\n\nimport React from \"react\";\nimport Web3 from \"web3\";\n\nvar App = function App() {\n  var _React$useState = React.useState(\"0x0\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      account = _React$useState2[0],\n      setAccount = _React$useState2[1];\n\n  var handleCheckWeb3 = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!window.ethereum) {\n                _context.next = 6;\n                break;\n              }\n\n              window.web3 = new Web3(window.ethereum);\n              _context.next = 4;\n              return window.ethereum.enable();\n\n            case 4:\n              _context.next = 7;\n              break;\n\n            case 6:\n              if (window.web3) {\n                window.web3 = new Web3(window.web3.currentProvider);\n              } else {\n                window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleCheckWeb3() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var loadBlockchainData = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var web3, accountList;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              web3 = window.web3;\n              _context2.next = 3;\n              return web3.eth.getAccount();\n\n            case 3:\n              accountList = _context2.sent;\n              console.log(accountList);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function loadBlockchainData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleLoad = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return handleCheckWeb3();\n\n            case 2:\n              _context3.next = 4;\n              return loadBlockchainData();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleLoad() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    handleLoad();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Address \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, account)));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/tynguyen/Desktop/defi-staking-app-starter/src/components/App.js"],"names":["React","Web3","App","useState","account","setAccount","handleCheckWeb3","window","ethereum","web3","enable","currentProvider","alert","loadBlockchainData","eth","getAccount","accountList","console","log","handleLoad","useEffect"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,wBACcF,KAAK,CAACG,QAAN,CAAe,KAAf,CADd;AAAA;AAAA,MACTC,OADS;AAAA,MACAC,UADA;;AAEhB,MAAMC,eAAe;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA,mBAClBC,MAAM,CAACC,QADW;AAAA;AAAA;AAAA;;AAEpBD,cAAAA,MAAM,CAACE,IAAP,GAAc,IAAIR,IAAJ,CAASM,MAAM,CAACC,QAAhB,CAAd;AAFoB;AAAA,qBAGdD,MAAM,CAACC,QAAP,CAAgBE,MAAhB,EAHc;;AAAA;AAAA;AAAA;;AAAA;AAIf,kBAAIH,MAAM,CAACE,IAAX,EAAiB;AACtBF,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIR,IAAJ,CAASM,MAAM,CAACE,IAAP,CAAYE,eAArB,CAAd;AACD,eAFM,MAEA;AACLJ,gBAAAA,MAAM,CAACK,KAAP,CAAa,2DAAb;AACD;;AARqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfN,eAAe;AAAA;AAAA;AAAA,KAArB;;AAUA,MAAMO,kBAAkB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBJ,cAAAA,IADmB,GACZF,MAAM,CAACE,IADK;AAAA;AAAA,qBAECA,IAAI,CAACK,GAAL,CAASC,UAAT,EAFD;;AAAA;AAEnBC,cAAAA,WAFmB;AAGzBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;;AAHyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBH,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAKA,MAAMM,UAAU;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACXb,eAAe,EADJ;;AAAA;AAAA;AAAA,qBAEXO,kBAAkB,EAFP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVM,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAIAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAM;AACpBD,IAAAA,UAAU;AACX,GAFD,EAEG,EAFH;AAGA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASf,OAAT,CADV,CADF,CADF;AAOD,CA/BD;;AAgCA,eAAeF,GAAf","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\";\nconst App = () => {\n  const [account, setAccount] = React.useState(\"0x0\");\n  const handleCheckWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert(\"No ethereum browser detected! You can check out MetaMask!\");\n    }\n  };\n  const loadBlockchainData = async () => {\n    const web3 = window.web3;\n    const accountList = await web3.eth.getAccount();\n    console.log(accountList);\n  };\n  const handleLoad = async () => {\n    await handleCheckWeb3();\n    await loadBlockchainData();\n  };\n  React.useEffect(() => {\n    handleLoad();\n  }, []);\n  return (\n    <>\n      <p>\n        Address <strong>{account}</strong>\n      </p>\n    </>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}